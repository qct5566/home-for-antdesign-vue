@import "./variable.less";

body {
  height: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
  font-family: Helvetica Neue, Helvetica, PingFang SC, Hiragino Sans GB,
    Microsoft YaHei, Arial, sans-serif;
  font-size: 14px;
  color: #333 !important;
}

label {
  font-weight: 700;
}

html {
  height: 100%;
  box-sizing: border-box;
}

#app {
  height: 100%;
}

*,
*:before,
*:after {
  box-sizing: inherit;
}

a {
  &.disabled {
    color: @disabledColor;
    &:hover {
      cursor: not-allowed;
      color: @disabledColor;
      opacity: 1;
    }
  }
}

// a:focus,
a:hover {
  cursor: pointer;
  color: inherit;
  outline: none;
  text-decoration: none;
  opacity: 0.7;
}

div:focus {
  outline: none;
}

a:focus,
a:active {
  outline: none;
}

.@{common-prefix} {
  &-opHidden {
    opacity: 0;
  }

  &-tdu {
    text-decoration: underline;
  }

  &-clearfloat,
  &-cf {
    &:after {
      visibility: hidden;
      display: block;
      font-size: 0;
      content: " ";
      clear: both;
      height: 0;
    }
  }

  &-mr-auto {
    margin: 0 auto;
  }

  &-brp50 {
    border-radius: 50% !important;
  }

  &-bd,
  &-border-solid {
    border: 1px solid #ebeef5;
  }

  &-bl {
    border-left: 1px solid #ebeef5;
  }

  &-bt {
    border-top: 1px solid #ebeef5;
  }

  &-br {
    border-right: 1px solid #ebeef5;
  }

  &-bb {
    border-bottom: 1px solid #ebeef5;
  }

  &-bn {
    border: 0 !important;
  }

  &-bln {
    border-left: 0 !important;
  }

  &-btn {
    border-top: 0 !important;
  }

  &-brn {
    border-right: 0 !important;
  }

  &-bbn {
    border-bottom: 0 !important;
  }

  &-rlt {
    position: relative;
  }

  &-abs {
    position: absolute;
  }

  &-fix {
    position: fixed;
  }

  &-fl {
    float: left;
  }

  &-fr {
    float: right;
  }

  &-fln {
    float: none !important;
  }

  &-dn {
    display: none;
  }

  &-tc {
    text-align: center;
  }

  &-tl {
    text-align: left;
  }

  &-tr {
    text-align: right;
  }

  &-db {
    display: block !important;
  }

  &-dib {
    display: inline-block;
  }

  &-ofa {
    overflow: auto;
  }

  &-ofya {
    overflow-y: auto;
  }

  &-ofxa {
    overflow-x: auto;
  }

  &-ofh {
    overflow: hidden;
  }

  /*注意，设为 Flex 布局以后，子元素的float、clear和vertical-align属性将失效*/
  /*
* flex-direction 主轴方向
* row（默认） 从左到右
* row-reverse 从右到左
* column 从上到下
* column-reverse 从下到上
*/

  /*
* flex-wrap 是否换行
* nowrap（默认） 不换行
* wrap 从上到下换行
* wrap-reverse 从下到上换行
*/

  /*
* flex-flow 是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap
*/

  /*
* justify-content 主轴对齐方式，轴的方向根据flex-direction定义水平或垂直
* flex-start（默认值）：左对齐
* flex-end：右对齐
* center： 居中
* space-between：两端对齐，项目之间的间隔都相等。
* space-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。
*/

  /*
* align-items 定义项目在交叉轴上如何对齐 轴的方向根据flex-direction定义水平或垂直相反
* flex-start：交叉轴的起点对齐。
* flex-end：交叉轴的终点对齐。
* center：交叉轴的中点对齐。
* baseline: 项目的第一行文字的基线对齐。
* stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。
*/

  /*
* align-content 属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用
* flex-start：与交叉轴的起点对齐。
* flex-end：与交叉轴的终点对齐。
* center：与交叉轴的中点对齐。
* space-between：与交叉轴两端对齐，轴线之间的间隔平均分布。
* space-around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。
* stretch（默认值）：轴线占满整个交叉轴。
*/
  &-df {
    display: -webkit-box;
    /* Chrome 4+, Safari 3.1, iOS Safari 3.2+ */
    display: -moz-box;
    /* Firefox 17- */
    display: -webkit-flex;
    /* Chrome 21+, Safari 6.1+, iOS Safari 7+, Opera 15/16 */
    display: -moz-flex;
    /* Firefox 18+ */
    display: -ms-flexbox;
    /* IE 10 */
    display: flex;
    /* Chrome 29+, Firefox 22+, IE 11+, Opera 12.1/17/18, Android 4.4+ */
  }

  &-flex-1 {
    -webkit-box-flex: 1;
    -webkit-flex: 1;
    -ms-flex: 1;
    flex: 1;
  }

  &-flex1,
  &-flex-one {
    -webkit-box-flex: 1;
    -webkit-flex: 1;
    -ms-flex: 1;
    flex: 1;
    width: auto;
    overflow: hidden;
    & > div {
      display: block;
    }
  }

  &-flex-auto {
    flex: auto;
    -webkit-box-flex: auto;
    -ms-flex: auto;
  }

  &-aic {
    align-items: center;
  }

  &-df-row {
    display: flex;
    flex-direction: row;
  }

  &-row-reverse {
    display: flex;
    flex-direction: row-reverse;
  }

  &-df-column {
    display: flex;
    flex-direction: column;
  }

  //水平排列两侧对齐垂直居中
  &-column-between {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
  }

  //垂直排列左右上下居中对齐
  &-column-center {
    display: flex !important;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    word-wrap: break-word;
    letter-spacing: 1px;
  }

  //水平排列左右上下居中对齐
  &-row-center {
    display: flex !important;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    text-align: center;
  }

  &-row-end {
    display: flex !important;
    justify-content:flex-end;
  }

  .between(@direction:row) {
    display: flex;
    flex-direction: direction;
    justify-content: space-between;
  }

  &-df-row-between {
    .between();
  }

  &-df-row-between-wrap {
    .between();
    flex-wrap: wrap;
  }

  //水平排列两侧对齐垂直居中
  &-row-between {
    .between();
    align-items: center;
  }

  //换行
  &-df-wrap {
    display: flex;
    flex-wrap: wrap;
  }

  //水平垂直对齐
  &-df-ai-center {
    display: flex;
    align-items: center;
  }

  &-wordbbw {
    word-break: break-word;
  }

  &-ell,
  &-toe {
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
  }

  &-ell2,
  &-toe2 {
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
  }

  &-fb {
    font-weight: bold;
  }

  &-fn {
    font-weight: normal;
  }

  &-vm {
    display: inline-block !important;
    vertical-align: middle !important;
  }

  &-vt {
    display: inline-block !important;
    vertical-align: top !important;
  }

  &-vb {
    display: inline-block !important;
    vertical-align: bottom !important;
  }

  //main-container全局样式
  &-app-main {
    overflow-y: auto;
    flex: 1;
    background-color: #e9eef3;
  }

  &-app-middle-container {
    width: 100%;
    display: flex;
    justify-content: center;
  }

  &-filter-container {
    padding-bottom: 10px;

    & > * {
      display: inline-block;
      vertical-align: middle;
      margin-bottom: 10px;
    }
  }

  //滚动条
  ::-webkit-scrollbar {
    width: 12px;
    height: 12px;
    background-color: #f5f5f5;
  }

  ::-webkit-scrollbar-thumb {
    background-color: #c8cfd7;
  }

  ::-webkit-scrollbar-track {
    // box-shadow: inset 0 0 12px #c8cfd7;
    // -webkit-box-shadow: inset 0 0 12px #c8cfd7;
    background-color: #f5f5f5;
  }

  //颜色
  &-blue-primary {
    color: @bluePrimary !important;
  }
  &-error {
    color: @errorColor !important;
  }

  &-success {
    color: @successColor !important;
  }

  &-warning {
    color: @warningColor !important;
  }

  &-primary {
    color: @primaryColor !important;
  }

  &-link {
    color: @linkColor !important;
  }

  &-bg-primary,
  &-bg-text {
    background: @primaryColor !important;
    color: #fff;
  }

  &-bg-link {
    background: @linkColor !important;
    color: #fff;
  }

  &-bg-success {
    background: @successColor !important;
    color: #fff;
  }

  &-bg-warning {
    background: @warningColor !important;
    color: #fff;
  }

  &-bg-error {
    background: @errorColor !important;
    color: #fff;
  }

  &-bg-f {
    background: #fff !important;
    color: #000;
  }

  &-bg-disabled {
    background: @disabledColor !important;
  }

  &-bg-gray {
    background: #e9eef3 !important;
  }

  &-bg-6 {
    background: #666 !important;
    color: #fff;
  }

  &-bg-f2 {
    background: #f2f2f2 !important;
  }

  &-bg-9 {
    background: #999 !important;
    color: #fff;
  }

  &-cursor-pt {
    cursor: pointer;
  }

  &-fc-6 {
    color: #666 !important;
  }

  &-fc-9 {
    color: #999 !important;
  }

  &-fc-f {
    color: #fff !important;
  }

  &-fc-gray {
    color: #aaaaaa !important;
  }

  &-w-auto {
    width: auto !important;
  }
}
